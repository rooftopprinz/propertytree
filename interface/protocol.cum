Type u64
{
    type(unsigned) width(64)
};

Type u32
{
    type(unsigned) width(32)
};

Type u16
{
    type(unsigned) width(16)
};

Type u8
{
    type(unsigned) width(8)
};

Type u64Array
{
    type(u64) dynamic_array()
};

Type Buffer
{
    type(unsigned) width(8) dynamic_array()
};

Type String
{
    type(asciiz)
};

Enumeration Cause
{
    OK,
    NOT_FOUND,
    ALREADY_EXIST,
    NOT_PERMITTED,
    NOT_EMPTY,
    NO_HANDLER

};

Sequence NamedNode
{
    String name,
    u64 uuid,
    u64 parentUuid
};

Type NamedNodeList
{
    type(NamedNode) dynamic_array()
};

Sequence SigninRequest
{
    u8 spare
};

Sequence SigninAccept
{
    u32 sessionId
};

Sequence CreateRequest
{
    String name,
    u64 parentUuid
};

Sequence CreateAccept
{
    u64 uuid
};

Sequence CreateReject
{
    Cause cause
};

Sequence GetRequest
{
    u64 uuid
};

Sequence GetAccept
{
    Buffer data
};

Sequence GetReject
{
    Cause cause
};

Sequence TreeInfoRequest
{
    u64 parentUuid,
    String name,
    u8 recursive
};

Sequence TreeInfoResponse
{
    NamedNodeList nodeToAddList
};

Sequence TreeInfoErrorResponse
{
    Cause cause
};


Sequence TreeUpdateNotification
{
    NamedNodeList nodeToAddList,
    u64Array nodeToDelete
};

Sequence DeleteRequest
{
    u64 uuid
};

Sequence DeleteResponse
{
    Cause cause
};

Sequence SetValueRequest
{
    u64 uuid,
    Buffer data
};

Sequence SetValueAccept
{
    u8 spare
};

Sequence SetValueReject
{
    Cause cause
};

Sequence SubscribeRequest
{
    u64 uuid
};

Sequence SubscribeResponse
{
    Cause cause
};

Sequence UnsubscribeRequest
{
    u64 uuid
};

Sequence UnsubscribeResponse
{
    Cause cause
};

Sequence UpdateNotification
{
    u64 uuid,
    Buffer data
};

Sequence RpcRequest
{
    u64 uuid,
    Buffer param
};

Sequence RpcAccept
{
    Buffer value
};

Sequence RpcReject
{
    Cause cause
};

Sequence HearbeatRequest
{
    u8 spare
};

Sequence HearbeatResponse
{
    u8 spare
};

Choice PropertyTreeMessages
{
    SigninRequest,
    SigninAccept,
    CreateRequest,
    CreateAccept,
    CreateReject,
    GetRequest,
    GetAccept,
    GetReject,
    TreeInfoRequest,
    TreeInfoResponse,
    TreeInfoErrorResponse,
    TreeUpdateNotification,
    DeleteRequest,
    DeleteResponse,
    SetValueRequest,
    SetValueAccept,
    SetValueReject,
    SubscribeRequest,
    SubscribeResponse,
    UnsubscribeRequest,
    UnsubscribeResponse,
    UpdateNotification,
    RpcRequest,
    RpcAccept,
    RpcReject,
    HearbeatRequest,
    HearbeatResponse
};

Sequence PropertyTreeMessage
{
    u16 transactionId,
    PropertyTreeMessages message
};

Type PropertyTreeMessageArray
{
    type(PropertyTreeMessage) dynamic_array(256)
};

Choice PropertyTreeProtocol
{
    PropertyTreeMessage,
    PropertyTreeMessageArray
}
